{
  "mcpServers": {
    "notion": {
      "command": "bash",
      "args": [
        "scripts/mcp-wrappers/load-env.sh",
        "npx",
        "-y",
        "@notionhq/notion-mcp-server"
      ]
    },
    "github": {
      "command": "bash",
      "args": [
        "scripts/mcp-wrappers/load-env.sh",
        "npx",
        "-y",
        "@modelcontextprotocol/server-github"
      ]
    }
  }
}

// ⚠️ CRITICAL SECURITY INSTRUCTIONS ⚠️
//
// HOW MCP ENVIRONMENT VARIABLES WORK:
//
// Claude Code does NOT automatically load .env files for MCP servers.
// This template uses a wrapper script (scripts/mcp-wrappers/load-env.sh)
// that loads .env and exports variables before starting the MCP server.
//
// SETUP STEPS:
//
// 1. Run /AgileFlow:setup and select MCP integration to auto-generate:
//    - .mcp.json (this file, copied from template)
//    - scripts/mcp-wrappers/load-env.sh (wrapper script)
//    - .env (token storage - you must add your actual tokens)
//
// 2. Add your tokens to .env file:
//    NOTION_TOKEN=ntn_your_actual_notion_token_here
//    GITHUB_PERSONAL_ACCESS_TOKEN=ghp_your_actual_github_token_here
//
// 3. VERIFY .mcp.json and .env are in .gitignore:
//    grep -E '\.mcp\.json|\.env' .gitignore
//    If missing, run /AgileFlow:setup or add manually!
//
// 4. RESTART Claude Code (critical - MCP servers only load at startup)
//
// 5. Test with: /AgileFlow:github or /AgileFlow:notion
//
// NEVER commit .mcp.json or .env to git (contains secrets!)
//
// Token sources:
// - Notion: https://www.notion.so/my-integrations (starts with "ntn_")
// - GitHub: https://github.com/settings/tokens (starts with "ghp_")
//
// GitHub token permissions needed:
// - repo (full control) - for issues, PRs, labels
// - read:org - for organization access (if needed)
//
// WHY WRAPPER APPROACH?
//
// OLD (broken): "env": {"VAR": "${VAR}"}
//   - Expected Claude Code to load .env (it doesn't)
//   - ${VAR} substitution reads from system env vars, not .env files
//
// NEW (works): "command": "bash", "args": ["scripts/mcp-wrappers/load-env.sh", ...]
//   - Wrapper loads .env and exports vars before running MCP server
//   - No "env" block needed
//   - Works reliably across all platforms
//
// ADDING OTHER MCP SERVERS:
//
// For servers that read from environment variables:
//   {
//     "server-name": {
//       "command": "bash",
//       "args": [
//         "scripts/mcp-wrappers/load-env.sh",
//         "npx",
//         "-y",
//         "@scope/mcp-server-package"
//       ]
//     }
//   }
//
// For servers that need command-line args with secrets:
//   - Create a dedicated wrapper script in scripts/mcp-wrappers/
//   - See templates/mcp-wrapper-postgres.sh for example
//   - Wrapper should load .env and pass secrets as CLI args
//
